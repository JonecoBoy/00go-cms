version: '3.9'
services:
  #  web:
  #    container_name: 'web'
  #    image: 'nginx:latest'
  #    ports:
  #      - '80:80'
  #    volumes:
  #      - ./nginx/dev.conf.d:/etc/nginx/conf.d
  #    depends_on:
  #      - 'api'

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/redis-logs:/var/log/redis   # Map the logs directory
    command: redis-server /usr/local/etc/redis/redis.conf

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    container_name: 00mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=00user
      - MONGO_INITDB_ROOT_PASSWORD=00secret
  mysql:
    image: mysql:latest
    container_name: 00mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 00secret
      MYSQL_DATABASE: 00cms
      MYSQL_USER: 00user
      MYSQL_PASSWORD: 00secret
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
  postgres:
    image: postgres:latest
    container_name: 00postgres
    restart: always
    environment:
      POSTGRES_USER: 00user
      POSTGRES_PASSWORD: 00secret
      POSTGRES_DB: 00cms
    ports:
      - "5432:5432"
    volumes:
      - ./db/postgres:/var/lib/postgresql/data

  sqlite3:
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    restart: always
    volumes:
      - ./db/sqlite/:/root/db/

  golang-app:
    build:
      context: .
      dockerfile: /app/dockerfile
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./app:/app  # Map the entire app directory
    depends_on:
      - redis
      - sqlite3
